{"ast":null,"code":"export default (async (req, res) => {\n  return res.json({\n    hello: 'world'\n  }); // createConnection().then(async (connection) => {\n  //   return new Promise(async (resolve, reject) => {\n  //     let goalRepo = connection.getRepository(Goal)\n  //     goalRepo\n  //       .find()\n  //       .then((goals) => {\n  //         res.json(JSON.stringify)\n  //         resolve()\n  //       })\n  //       .catch((err) => {\n  //         res.json(err)\n  //         res.status(405).end()\n  //         return reject()\n  //       })\n  //   })\n  // })\n});","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/api/getGoals.ts"],"names":["req","res","json","hello"],"mappings":"AAGA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,SAAOA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAT,CAAP,CADiC,CAGjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CApBD","sourcesContent":["import { getConnection, createConnection } from 'typeorm'\nimport { Goal } from '../../src/entity/Goal'\n\nexport default async (req, res) => {\n  return res.json({ hello: 'world' })\n\n  // createConnection().then(async (connection) => {\n  //   return new Promise(async (resolve, reject) => {\n  //     let goalRepo = connection.getRepository(Goal)\n\n  //     goalRepo\n  //       .find()\n  //       .then((goals) => {\n  //         res.json(JSON.stringify)\n  //         resolve()\n  //       })\n  //       .catch((err) => {\n  //         res.json(err)\n  //         res.status(405).end()\n  //         return reject()\n  //       })\n  //   })\n  // })\n}\n"]},"metadata":{},"sourceType":"module"}