{"ast":null,"code":"import { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport firebase from '../firebase';\nimport { validate, writeUserData } from '../utils/helpers';\n\nconst Login = () => {\n  const router = useRouter();\n  const {\n    0: page,\n    1: setPage\n  } = useState('login');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    name: '',\n    email: '',\n    password: ''\n  }); // Capture form submit\n\n  const submitRegister = e => {\n    e.preventDefault();\n    let newUser = {\n      name,\n      email,\n      password\n    }; // Validate user object\n\n    const validationResult = validate(newUser); // If no errors, add new user to auth database\n\n    if (validationResult.noErrors) {\n      firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(userCredential => {\n        let newAuthUser = userCredential.user; // Create new user object in realtime database\n\n        writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email); // Redirect to dashboard\n\n        router.push('/home');\n      }).catch(error => {\n        console.log(error);\n      });\n    } // Set errrors state to match errors returned from validate\n\n\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password: validationResult.password === '' ? '' : validationResult.password\n    });\n  };\n\n  const submitLogin = e => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(userCredential => {\n      let existAuthUser = userCredential.user;\n      router.push('/home');\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return 'hi'; //   return (\n  //     <form onSubmit={page === 'register' ? submitRegister : submitLogin}>\n  //       {page === 'register' && (\n  //         <>\n  //           <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n  //           <Error>{errors.name}</Error>\n  //         </>\n  //       )}\n  //       <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n  //       <Error>{errors.email}</Error>\n  //       <input\n  //         placeholder='Password'\n  //         type='password'\n  //         onChange={(e) => setPassword(e.target.value)}\n  //       />\n  //       <Error>{errors.password}</Error>\n  //       <button type='submit'>\n  //         {page === 'register' ? 'Register' : 'Login'}\n  //       </button>\n  //       <button onClick={() => setPage(page === 'login' ? 'register' : 'login')}>\n  //         {page === 'register' ? 'login' : 'Register'}\n  //       </button>\n  //     </form>\n  // )\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/login.tsx"],"names":["useState","useRouter","firebase","validate","writeUserData","Login","router","page","setPage","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","preventDefault","newUser","validationResult","noErrors","auth","createUserWithEmailAndPassword","then","userCredential","newAuthUser","user","uid","push","catch","error","console","log","submitLogin","signInWithEmailAndPassword","existAuthUser"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,kBAAxC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,EAAR;AAAYE,IAAAA,KAAK,EAAE,EAAnB;AAAuBE,IAAAA,QAAQ,EAAE;AAAjC,GAAD,CAApC,CANkB,CAQlB;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAY;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,OAAgB,GAAG;AACrBX,MAAAA,IADqB;AAErBE,MAAAA,KAFqB;AAGrBE,MAAAA;AAHqB,KAAvB,CAHiC,CASjC;;AACA,UAAMQ,gBAAgB,GAAGlB,QAAQ,CAACiB,OAAD,CAAjC,CAViC,CAYjC;;AACA,QAAIC,gBAAgB,CAACC,QAArB,EAA+B;AAC7BpB,MAAAA,QAAQ,CACLqB,IADH,GAEGC,8BAFH,CAEkCJ,OAAO,CAACT,KAF1C,EAEiDS,OAAO,CAACP,QAFzD,EAGGY,IAHH,CAGSC,cAAD,IAAoB;AACxB,YAAIC,WAAW,GAAGD,cAAc,CAACE,IAAjC,CADwB,CAGxB;;AACAxB,QAAAA,aAAa,CAACuB,WAAW,CAACE,GAAb,EAAkBT,OAAO,CAACX,IAA1B,EAAgCkB,WAAW,CAAChB,KAA5C,CAAb,CAJwB,CAMxB;;AACAL,QAAAA,MAAM,CAACwB,IAAP,CAAY,OAAZ;AACD,OAXH,EAYGC,KAZH,CAYUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAdH;AAeD,KA7BgC,CA+BjC;;;AACA,WAAOhB,SAAS,CAAC;AACfP,MAAAA,IAAI,EAAEY,gBAAgB,CAACZ,IAAjB,KAA0B,EAA1B,GAA+B,EAA/B,GAAoCY,gBAAgB,CAACZ,IAD5C;AAEfE,MAAAA,KAAK,EAAEU,gBAAgB,CAACV,KAAjB,KAA2B,EAA3B,GAAgC,EAAhC,GAAqCU,gBAAgB,CAACV,KAF9C;AAGfE,MAAAA,QAAQ,EACNQ,gBAAgB,CAACR,QAAjB,KAA8B,EAA9B,GAAmC,EAAnC,GAAwCQ,gBAAgB,CAACR;AAJ5C,KAAD,CAAhB;AAMD,GAtCD;;AAwCA,QAAMsB,WAAW,GAAIjB,CAAD,IAAY;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEAjB,IAAAA,QAAQ,CACLqB,IADH,GAEGa,0BAFH,CAE8BzB,KAF9B,EAEqCE,QAFrC,EAGGY,IAHH,CAGSC,cAAD,IAAoB;AACxB,UAAIW,aAAa,GAAGX,cAAc,CAACE,IAAnC;AAEAtB,MAAAA,MAAM,CAACwB,IAAP,CAAY,OAAZ;AACD,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH;AAWD,GAdD;;AAgBA,SAAO,IAAP,CAjEkB,CAkElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA1FD;;AA2FA,eAAe3B,KAAf","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\nimport { NewUser, ExistUser } from '../utils/types'\nimport { validate, writeUserData } from '../utils/helpers'\n\nconst Login = () => {\n  const router = useRouter()\n  const [page, setPage] = useState('login')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n\n  // Capture form submit\n  const submitRegister = (e: any) => {\n    e.preventDefault()\n\n    let newUser: NewUser = {\n      name,\n      email,\n      password\n    }\n\n    // Validate user object\n    const validationResult = validate(newUser)\n\n    // If no errors, add new user to auth database\n    if (validationResult.noErrors) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((userCredential) => {\n          let newAuthUser = userCredential.user\n\n          // Create new user object in realtime database\n          writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email)\n\n          // Redirect to dashboard\n          router.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n\n    // Set errrors state to match errors returned from validate\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password:\n        validationResult.password === '' ? '' : validationResult.password\n    })\n  }\n\n  const submitLogin = (e: any) => {\n    e.preventDefault()\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let existAuthUser = userCredential.user\n\n        router.push('/home')\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return 'hi'\n  //   return (\n  //     <form onSubmit={page === 'register' ? submitRegister : submitLogin}>\n  //       {page === 'register' && (\n  //         <>\n  //           <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n  //           <Error>{errors.name}</Error>\n  //         </>\n  //       )}\n  //       <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n  //       <Error>{errors.email}</Error>\n  //       <input\n  //         placeholder='Password'\n  //         type='password'\n  //         onChange={(e) => setPassword(e.target.value)}\n  //       />\n  //       <Error>{errors.password}</Error>\n  //       <button type='submit'>\n  //         {page === 'register' ? 'Register' : 'Login'}\n  //       </button>\n  //       <button onClick={() => setPage(page === 'login' ? 'register' : 'login')}>\n  //         {page === 'register' ? 'login' : 'Register'}\n  //       </button>\n  //     </form>\n  // )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}