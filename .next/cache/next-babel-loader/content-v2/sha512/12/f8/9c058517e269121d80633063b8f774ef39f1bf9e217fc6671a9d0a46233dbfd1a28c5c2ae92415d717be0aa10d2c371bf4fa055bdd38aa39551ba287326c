{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { createConnection, getConnection } from 'typeorm';\nimport { Goal } from '../src/entity/Goal';\nimport firebase from '../firebase';\ncreateConnection();\n\nconst Home = async () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    email: '',\n    displayName: ''\n  });\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    let userId;\n\n    if (firebase.auth().currentUser === null) {\n      return router.push('/login');\n    } else {\n      userId = firebase.auth().currentUser.uid;\n    }\n\n    firebase.database().ref(`users/${userId}`).once('value').then(snapshot => {\n      console.log(snapshot.val());\n      setUser(snapshot.val());\n      setLoggedIn(true);\n    });\n    getConnection().getRepository(Goal).find().then(goal => console.log(goal));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"hello\"\n  }, void 0, false);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/home.tsx"],"names":["useEffect","useState","useRouter","createConnection","getConnection","Goal","firebase","Home","user","setUser","email","displayName","loggedIn","setLoggedIn","router","userId","auth","currentUser","push","uid","database","ref","once","then","snapshot","console","log","val","getRepository","find","goal"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGAH,gBAAgB;;AAEhB,MAAMI,IAAI,GAAG,YAAY;AACvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE;AAA1B,GAAD,CAAhC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMa,MAAM,GAAGZ,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAW;AACnB,QAAIe,MAAJ;;AAEA,QAAIT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,KAAgC,IAApC,EAA0C;AACxC,aAAOH,MAAM,CAACI,IAAP,CAAY,QAAZ,CAAP;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,CAA4BE,GAArC;AACD;;AAEDb,IAAAA,QAAQ,CACLc,QADH,GAEGC,GAFH,CAEQ,SAAQN,MAAO,EAFvB,EAGGO,IAHH,CAGQ,OAHR,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,EAAZ;AACAlB,MAAAA,OAAO,CAACe,QAAQ,CAACG,GAAT,EAAD,CAAP;AACAd,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KARH;AAUAT,IAAAA,aAAa,GACVwB,aADH,CACiBvB,IADjB,EAEGwB,IAFH,GAGGN,IAHH,CAGSO,IAAD,IAAUL,OAAO,CAACC,GAAR,CAAYI,IAAZ,CAHlB;AAID,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACE;AAAA;AAAA,mBADF;AAeD,CA7CD;;AA+CA,eAAevB,IAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { createConnection, getConnection } from 'typeorm'\nimport { Goal } from '../src/entity/Goal'\nimport firebase from '../firebase'\nimport { create } from 'domain'\n\ncreateConnection()\n\nconst Home = async () => {\n  const [user, setUser] = useState({ email: '', displayName: '' })\n  const [loggedIn, setLoggedIn] = useState(false)\n  const router = useRouter()\n\n  useEffect((): any => {\n    let userId\n\n    if (firebase.auth().currentUser === null) {\n      return router.push('/login')\n    } else {\n      userId = firebase.auth().currentUser.uid\n    }\n\n    firebase\n      .database()\n      .ref(`users/${userId}`)\n      .once('value')\n      .then((snapshot) => {\n        console.log(snapshot.val())\n        setUser(snapshot.val())\n        setLoggedIn(true)\n      })\n\n    getConnection()\n      .getRepository(Goal)\n      .find()\n      .then((goal) => console.log(goal))\n  }, [])\n\n  return (\n    <>\n      hello\n      {/* {loggedIn ? (\n        <>\n          <h1>Dashboard</h1>\n          <h2>Welcome, {user.displayName}</h2>\n        </>\n      ) : (\n        <>\n          <h2>Please wait...</h2>\n        </>\n      )} */}\n    </>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}