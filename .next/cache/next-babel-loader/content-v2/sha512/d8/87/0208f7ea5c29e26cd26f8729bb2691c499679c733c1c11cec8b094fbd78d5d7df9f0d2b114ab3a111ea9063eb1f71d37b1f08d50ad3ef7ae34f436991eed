{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx\";\nimport { useState } from 'react';\nimport firebase from '../firebase';\nimport Error from '../components/Error';\n\nconst Register = () => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({}); // Capture form submit, validate and submit new user\n\n  const submitRegister = async e => {\n    e.preventDefault();\n    const usersRef = firebase.database().ref('users');\n    let user = {\n      name,\n      email,\n      password\n    }; // Check if each field was filled and set errors state accordingly\n\n    setErrors({\n      name: user.name === '' ? 'You must enter your name.' : '',\n      email: user.email === '' ? 'You must enter a valid email.' : '',\n      password: user.password === '' ? 'You must enter a valid password.' : ''\n    });\n    console.log(errors); // usersRef.push(user)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx"],"names":["useState","firebase","Error","Register","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","preventDefault","usersRef","database","ref","user","console","log","target","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,EAAD,CAApC,CAJqB,CAMrB;;AACA,QAAMY,cAAc,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAGd,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAjB;AACA,QAAIC,IAAI,GAAG;AACTd,MAAAA,IADS;AAETE,MAAAA,KAFS;AAGTE,MAAAA;AAHS,KAAX,CAHkC,CASlC;;AACAG,IAAAA,SAAS,CAAC;AACRP,MAAAA,IAAI,EAAEc,IAAI,CAACd,IAAL,KAAc,EAAd,GAAmB,2BAAnB,GAAiD,EAD/C;AAERE,MAAAA,KAAK,EAAEY,IAAI,CAACZ,KAAL,KAAe,EAAf,GAAoB,+BAApB,GAAsD,EAFrD;AAGRE,MAAAA,QAAQ,EAAEU,IAAI,CAACV,QAAL,KAAkB,EAAlB,GAAuB,kCAAvB,GAA4D;AAH9D,KAAD,CAAT;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAhBkC,CAiBlC;AACD,GAlBD;;AAmBA,sBACE;AAAM,IAAA,QAAQ,EAAEE,cAAhB;AAAA,4BACE;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAGC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACQ,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA,gBAAQZ,MAAM,CAACN;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,KAAD;AAAA,gBAAQZ,MAAM,CAACJ;AAAf;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAGO,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,YATF,eAcE,QAAC,KAAD;AAAA,gBAAQZ,MAAM,CAACF;AAAf;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;AA+CA,eAAeL,QAAf","sourcesContent":["import { useState } from 'react'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\n\nconst Register = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({})\n\n  // Capture form submit, validate and submit new user\n  const submitRegister = async (e) => {\n    e.preventDefault()\n    const usersRef = firebase.database().ref('users')\n    let user = {\n      name,\n      email,\n      password\n    }\n\n    // Check if each field was filled and set errors state accordingly\n    setErrors({\n      name: user.name === '' ? 'You must enter your name.' : '',\n      email: user.email === '' ? 'You must enter a valid email.' : '',\n      password: user.password === '' ? 'You must enter a valid password.' : ''\n    })\n\n    console.log(errors)\n    // usersRef.push(user)\n  }\n  return (\n    <form onSubmit={submitRegister}>\n      <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n      <Error>{errors.name}</Error>\n      <input\n        placeholder='Email'\n        type='email'\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}