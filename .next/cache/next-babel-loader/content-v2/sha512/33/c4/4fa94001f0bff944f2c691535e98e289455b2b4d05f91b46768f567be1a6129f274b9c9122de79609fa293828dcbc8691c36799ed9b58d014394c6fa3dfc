{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport firebase from '../firebase';\nimport { validate, writeUserData } from '../utils/helpers';\n\nvar Login = function Login() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState('login'),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState(''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(''),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n      errors = _useState5[0],\n      setErrors = _useState5[1]; // Capture form submit\n\n\n  var submitRegister = function submitRegister(e) {\n    e.preventDefault();\n    var newUser = {\n      name: name,\n      email: email,\n      password: password\n    }; // Validate user object\n\n    var validationResult = validate(newUser); // If no errors, add new user to auth database\n\n    if (validationResult.noErrors) {\n      firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(function (userCredential) {\n        var newAuthUser = userCredential.user; // Create new user object in realtime database\n\n        writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email); // Redirect to dashboard\n\n        router.push('/home');\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    } // Set errrors state to match errors returned from validate\n\n\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password: validationResult.password === '' ? '' : validationResult.password\n    });\n  };\n\n  var submitLogin = function submitLogin(e) {\n    e.preventDefault();\n    var existUser = {\n      email: email,\n      password: password\n    };\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n      var existAuthUser = userCredential.user;\n      router.push('/home');\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: page === 'register' ? submitRegister : submitLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"vEq660seRYFO2rszNKOet6VJeIY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/login.tsx"],"names":["useState","useRouter","firebase","validate","writeUserData","Login","router","page","setPage","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","preventDefault","newUser","validationResult","noErrors","auth","createUserWithEmailAndPassword","then","userCredential","newAuthUser","user","uid","push","error","console","log","submitLogin","existUser","signInWithEmailAndPassword","existAuthUser"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\nimport { NewUser, ExistUser } from '../utils/types'\nimport { validate, writeUserData } from '../utils/helpers'\n\nconst Login = () => {\n  const router = useRouter()\n  const [page, setPage] = useState('login')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n\n  // Capture form submit\n  const submitRegister = (e: any) => {\n    e.preventDefault()\n\n    let newUser: NewUser = {\n      name,\n      email,\n      password\n    }\n\n    // Validate user object\n    const validationResult = validate(newUser)\n\n    // If no errors, add new user to auth database\n    if (validationResult.noErrors) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((userCredential) => {\n          let newAuthUser = userCredential.user\n\n          // Create new user object in realtime database\n          writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email)\n\n          // Redirect to dashboard\n          router.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n\n    // Set errrors state to match errors returned from validate\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password:\n        validationResult.password === '' ? '' : validationResult.password\n    })\n  }\n\n  const submitLogin = (e: any) => {\n    e.preventDefault()\n\n    let existUser: ExistUser = {\n      email,\n      password\n    }\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let existAuthUser = userCredential.user\n\n        router.push('/home')\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <form onSubmit={page === 'register' ? submitRegister : submitLogin}>\n      {/* {page === 'register' && (\n        <>\n          <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n          <Error>{errors.name}</Error>\n        </>\n      )}\n      <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <button type='submit'>\n        {page === 'register' ? 'Register' : 'Login'}\n      </button>\n      <button onClick={() => setPage(page === 'login' ? 'register' : 'login')}>\n        {page === 'register' ? 'login' : 'Register'}\n      </button> */}\n    </form>\n  )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}