{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport firebase from '../firebase';\nimport Error from '../components/Error';\nimport { validate, writeUserData } from '../utils/helpers';\n\nvar Register = function Register() {\n  _s();\n\n  var usersRef = firebase.database().ref('users');\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n      errors = _useState4[0],\n      setErrors = _useState4[1]; // Capture form submit\n\n\n  var submitRegister = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var user, validationResult;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              user = {\n                name: name,\n                email: email,\n                password: password\n              }; // Validate user object\n\n              validationResult = validate(user); // If no errors, add new user to database\n\n              if (validationResult.noErrors) {\n                firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then(function (userCredential) {\n                  // Signed in\n                  var newUser = userCredential.user;\n                  writeUserData(newUser.uid, newUser.displayName, newUser.email);\n                })[\"catch\"](function (error) {\n                  var errorCode = error.code;\n                  var errorMessage = error.message;\n                });\n              } // Set errrors state to match errors returned from validate\n\n\n              return _context.abrupt(\"return\", setErrors({\n                name: validationResult.name === '' ? '' : validationResult.name,\n                email: validationResult.email === '' ? '' : validationResult.email,\n                password: validationResult.password === '' ? '' : validationResult.password\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitRegister(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      onChange: function onChange(e) {\n        return setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"It7IWVc4i6Q7U7jKdF9tJeVB4/Q=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx"],"names":["useState","firebase","Error","validate","writeUserData","Register","usersRef","database","ref","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","preventDefault","user","validationResult","noErrors","auth","createUserWithEmailAndPassword","then","userCredential","newUser","uid","displayName","error","errorCode","code","errorMessage","message","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\nimport { User } from '../utils/types'\nimport { validate, writeUserData } from '../utils/helpers'\n\nconst Register = () => {\n  const usersRef = firebase.database().ref('users')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n\n  // Capture form submit\n  const submitRegister = async (e: any) => {\n    e.preventDefault()\n\n    let user: User = {\n      name,\n      email,\n      password\n    }\n\n    // Validate user object\n    const validationResult = validate(user)\n\n    // If no errors, add new user to database\n    if (validationResult.noErrors) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(user.email, user.password)\n        .then((userCredential) => {\n          // Signed in\n          let newUser = userCredential.user\n\n          writeUserData(newUser.uid, newUser.displayName, newUser.email)\n        })\n        .catch((error) => {\n          let errorCode = error.code\n          let errorMessage = error.message\n        })\n    }\n\n    // Set errrors state to match errors returned from validate\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password:\n        validationResult.password === '' ? '' : validationResult.password\n    })\n  }\n\n  return (\n    <form onSubmit={submitRegister}>\n      <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n      <Error>{errors.name}</Error>\n      <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\nexport default Register\n"]},"metadata":{},"sourceType":"module"}