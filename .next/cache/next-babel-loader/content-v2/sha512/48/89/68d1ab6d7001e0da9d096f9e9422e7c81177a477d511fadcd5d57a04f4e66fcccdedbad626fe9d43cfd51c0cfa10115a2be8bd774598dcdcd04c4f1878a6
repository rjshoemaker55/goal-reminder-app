{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/login.tsx\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport firebase from '../firebase';\nimport Error from '../components/Error';\nimport { validate, writeUserData, handleError } from '../utils/helpers';\n\nconst Login = () => {\n  const router = useRouter();\n  const {\n    0: page,\n    1: setPage\n  } = useState('login');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState(''); // Capture form submit\n\n  const submitRegister = e => {\n    e.preventDefault();\n    let newUser = {\n      name,\n      email,\n      password\n    }; // Validate user object\n\n    const validationResult = validate(newUser); // If no errors, add new user to auth database\n\n    if (validationResult.noErrors) {\n      firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(userCredential => {\n        let newAuthUser = userCredential.user; // Create new user object in realtime database\n\n        writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email); // Redirect to dashboard\n\n        router.push('/home');\n      }).catch(error => {\n        console.log(error);\n      });\n    } // Set errrors state to match errors returned from validate\n\n\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password: validationResult.password === '' ? '' : validationResult.password\n    });\n  };\n\n  const submitLogin = e => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(userCredential => {\n      let existAuthUser = userCredential.user;\n      router.push('/home');\n    }).catch(error => {\n      console.log(error);\n      setLoginError(handleError(error));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: page === 'register' ? submitRegister : submitLogin,\n    children: [page === 'register' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: page === 'register' ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page === 'login' ? 'register' : 'login'),\n      children: page === 'register' ? 'login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/login.tsx"],"names":["useState","useRouter","firebase","Error","validate","writeUserData","handleError","Login","router","page","setPage","name","setName","email","setEmail","password","setPassword","errors","setErrors","loginError","setLoginError","submitRegister","e","preventDefault","newUser","validationResult","noErrors","auth","createUserWithEmailAndPassword","then","userCredential","newAuthUser","user","uid","push","catch","error","console","log","submitLogin","signInWithEmailAndPassword","existAuthUser","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\nimport { NewUser, ExistUser } from '../utils/types'\nimport { validate, writeUserData, handleError } from '../utils/helpers'\n\nconst Login = () => {\n  const router = useRouter()\n  const [page, setPage] = useState('login')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n  const [loginError, setLoginError] = useState('')\n\n  // Capture form submit\n  const submitRegister = (e: any) => {\n    e.preventDefault()\n\n    let newUser: NewUser = {\n      name,\n      email,\n      password\n    }\n\n    // Validate user object\n    const validationResult = validate(newUser)\n\n    // If no errors, add new user to auth database\n    if (validationResult.noErrors) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(newUser.email, newUser.password)\n        .then((userCredential) => {\n          let newAuthUser = userCredential.user\n\n          // Create new user object in realtime database\n          writeUserData(newAuthUser.uid, newUser.name, newAuthUser.email)\n\n          // Redirect to dashboard\n          router.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n\n    // Set errrors state to match errors returned from validate\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password:\n        validationResult.password === '' ? '' : validationResult.password\n    })\n  }\n\n  const submitLogin = (e: any) => {\n    e.preventDefault()\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        let existAuthUser = userCredential.user\n\n        router.push('/home')\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoginError(handleError(error))\n      })\n  }\n\n  return (\n    <form onSubmit={page === 'register' ? submitRegister : submitLogin}>\n      {page === 'register' && (\n        <>\n          <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n          <Error>{errors.name}</Error>\n        </>\n      )}\n      <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <Error>{loginError}</Error>\n      <button type='submit'>\n        {page === 'register' ? 'Register' : 'Login'}\n      </button>\n      <button onClick={() => setPage(page === 'login' ? 'register' : 'login')}>\n        {page === 'register' ? 'login' : 'Register'}\n      </button>\n    </form>\n  )\n}\nexport default Login\n"]},"metadata":{},"sourceType":"module"}