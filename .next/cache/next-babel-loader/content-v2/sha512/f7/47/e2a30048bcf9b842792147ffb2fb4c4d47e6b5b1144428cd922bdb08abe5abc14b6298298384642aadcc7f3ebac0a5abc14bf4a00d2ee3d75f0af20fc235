{"ast":null,"code":"import 'reflect-metadata';\nimport { createConnection } from 'typeorm';\nimport nextConnect from 'next-connect';\nimport { Goal } from '../../src/entity/Goal';\nconst handler = nextConnect();\nhandler.use(nextConnect());\nhandler.get((req, res) => {\n  createConnection().then(async connection => {\n    let goalRepo = connection.getRepository(Goal);\n    const goals = await goalRepo.find();\n    res.statusCode = 200;\n    res.json({\n      status: 'success',\n      data: goals\n    });\n  }).catch(err => res.end(err));\n});\nexport default handler;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/api/getGoals.ts"],"names":["createConnection","nextConnect","Goal","handler","use","get","req","res","then","connection","goalRepo","getRepository","goals","find","statusCode","json","status","data","catch","err","end"],"mappings":"AAAA,OAAO,kBAAP;AACA,SAAwBA,gBAAxB,QAAgD,SAAhD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,MAAMC,OAAO,GAAGF,WAAW,EAA3B;AAEAE,OAAO,CAACC,GAAR,CAAYH,WAAW,EAAvB;AAEAE,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxBP,EAAAA,gBAAgB,GACbQ,IADH,CACQ,MAAOC,UAAP,IAAsB;AAC1B,QAAIC,QAAQ,GAAGD,UAAU,CAACE,aAAX,CAAyBT,IAAzB,CAAf;AAEA,UAAMU,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEAN,IAAAA,GAAG,CAACO,UAAJ,GAAiB,GAAjB;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AACPC,MAAAA,MAAM,EAAE,SADD;AAEPC,MAAAA,IAAI,EAAEL;AAFC,KAAT;AAID,GAXH,EAYGM,KAZH,CAYUC,GAAD,IAASZ,GAAG,CAACa,GAAJ,CAAQD,GAAR,CAZlB;AAaD,CAdD;AAgBA,eAAehB,OAAf","sourcesContent":["import 'reflect-metadata'\nimport { getConnection, createConnection } from 'typeorm'\nimport nextConnect from 'next-connect'\nimport { Goal } from '../../src/entity/Goal'\n\nconst handler = nextConnect()\n\nhandler.use(nextConnect())\n\nhandler.get((req, res) => {\n  createConnection()\n    .then(async (connection) => {\n      let goalRepo = connection.getRepository(Goal)\n\n      const goals = await goalRepo.find()\n\n      res.statusCode = 200\n      res.json({\n        status: 'success',\n        data: goals\n      })\n    })\n    .catch((err) => res.end(err))\n})\n\nexport default handler\n"]},"metadata":{},"sourceType":"module"}