{"ast":null,"code":"import 'reflect-metadata';\nimport { createConnection } from 'typeorm';\nimport nextConnect from 'next-connect';\nimport { Goal } from '../../src/entity/Goal';\nconst handler = nextConnect();\nhandler.use(nextConnect());\nhandler.get((req, res) => {\n  createConnection().then(async connection => {\n    let goalRepo = connection.getRepository(Goal);\n    goalRepo.find().then(goals => {\n      console.log(goals);\n      res.end(goals);\n    }).catch(err => {\n      console.log(err);\n      res.end(err);\n    });\n  }).catch(err => res.end(err));\n});","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/api/getGoals.ts"],"names":["createConnection","nextConnect","Goal","handler","use","get","req","res","then","connection","goalRepo","getRepository","find","goals","console","log","end","catch","err"],"mappings":"AAAA,OAAO,kBAAP;AACA,SAAwBA,gBAAxB,QAAgD,SAAhD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,MAAMC,OAAO,GAAGF,WAAW,EAA3B;AAEAE,OAAO,CAACC,GAAR,CAAYH,WAAW,EAAvB;AAEAE,OAAO,CAACE,GAAR,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxBP,EAAAA,gBAAgB,GACbQ,IADH,CACQ,MAAOC,UAAP,IAAsB;AAC1B,QAAIC,QAAQ,GAAGD,UAAU,CAACE,aAAX,CAAyBT,IAAzB,CAAf;AAEAQ,IAAAA,QAAQ,CACLE,IADH,GAEGJ,IAFH,CAESK,KAAD,IAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,MAAAA,GAAG,CAACS,GAAJ,CAAQH,KAAR;AACD,KALH,EAMGI,KANH,CAMUC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAX,MAAAA,GAAG,CAACS,GAAJ,CAAQE,GAAR;AACD,KATH;AAUD,GAdH,EAeGD,KAfH,CAeUC,GAAD,IAASX,GAAG,CAACS,GAAJ,CAAQE,GAAR,CAflB;AAgBD,CAjBD","sourcesContent":["import 'reflect-metadata'\nimport { getConnection, createConnection } from 'typeorm'\nimport nextConnect from 'next-connect'\nimport { Goal } from '../../src/entity/Goal'\n\nconst handler = nextConnect()\n\nhandler.use(nextConnect())\n\nhandler.get((req, res) => {\n  createConnection()\n    .then(async (connection) => {\n      let goalRepo = connection.getRepository(Goal)\n\n      goalRepo\n        .find()\n        .then((goals) => {\n          console.log(goals)\n          res.end(goals)\n        })\n        .catch((err) => {\n          console.log(err)\n          res.end(err)\n        })\n    })\n    .catch((err) => res.end(err))\n})\n"]},"metadata":{},"sourceType":"module"}