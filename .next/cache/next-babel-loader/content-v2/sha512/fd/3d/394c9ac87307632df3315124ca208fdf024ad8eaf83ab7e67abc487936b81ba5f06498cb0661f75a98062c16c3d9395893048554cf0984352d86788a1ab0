{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { createConnection } from 'typeorm';\nimport firebase from '../firebase';\ncreateConnection();\n\nvar Home = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useState, user, setUser, _useState2, loggedIn, setLoggedIn, router;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useState = useState({\n              email: '',\n              displayName: ''\n            }), user = _useState[0], setUser = _useState[1];\n            _useState2 = useState(false), loggedIn = _useState2[0], setLoggedIn = _useState2[1];\n            router = useRouter();\n            useEffect(function () {\n              var userId;\n\n              if (firebase.auth().currentUser === null) {\n                return router.push('/login');\n              } else {\n                userId = firebase.auth().currentUser.uid;\n              }\n\n              firebase.database().ref(\"users/\".concat(userId)).once('value').then(function (snapshot) {\n                console.log(snapshot.val());\n                setUser(snapshot.val());\n                setLoggedIn(true);\n              }); // getConnection()\n              //   .getRepository(Goal)\n              //   .find()\n              //   .then((goal) => console.log(goal))\n            }, []);\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"hello\"\n            }, void 0, false));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"1tZKk1X53taumhfqwoLd5qk1Fh0=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function Home() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/home.tsx"],"names":["useEffect","useState","useRouter","createConnection","firebase","Home","email","displayName","user","setUser","loggedIn","setLoggedIn","router","userId","auth","currentUser","push","uid","database","ref","once","then","snapshot","console","log","val"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAgD,SAAhD;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAGAD,gBAAgB;;AAEhB,IAAME,IAAI;AAAA;;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBACaJ,QAAQ,CAAC;AAAEK,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,WAAW,EAAE;AAA1B,aAAD,CADrB,EACJC,IADI,iBACEC,OADF;AAAA,yBAEqBR,QAAQ,CAAC,KAAD,CAF7B,EAEJS,QAFI,kBAEMC,WAFN;AAGLC,YAAAA,MAHK,GAGIV,SAAS,EAHb;AAKXF,YAAAA,SAAS,CAAC,YAAW;AACnB,kBAAIa,MAAJ;;AAEA,kBAAIT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,KAAgC,IAApC,EAA0C;AACxC,uBAAOH,MAAM,CAACI,IAAP,CAAY,QAAZ,CAAP;AACD,eAFD,MAEO;AACLH,gBAAAA,MAAM,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,CAA4BE,GAArC;AACD;;AAEDb,cAAAA,QAAQ,CACLc,QADH,GAEGC,GAFH,iBAEgBN,MAFhB,GAGGO,IAHH,CAGQ,OAHR,EAIGC,IAJH,CAIQ,UAACC,QAAD,EAAc;AAClBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,EAAZ;AACAhB,gBAAAA,OAAO,CAACa,QAAQ,CAACG,GAAT,EAAD,CAAP;AACAd,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACD,eARH,EATmB,CAmBnB;AACA;AACA;AACA;AACD,aAvBQ,EAuBN,EAvBM,CAAT;AALW,0DA+BT;AAAA;AAAA,6BA/BS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAGOT,SAHP;AAAA;;AAAA,kBAAJG,IAAI;AAAA;AAAA;AAAA,GAAV;;KAAMA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { createConnection, getConnection } from 'typeorm'\nimport { Goal } from '../src/entity/Goal'\nimport firebase from '../firebase'\nimport { create } from 'domain'\n\ncreateConnection()\n\nconst Home = async () => {\n  const [user, setUser] = useState({ email: '', displayName: '' })\n  const [loggedIn, setLoggedIn] = useState(false)\n  const router = useRouter()\n\n  useEffect((): any => {\n    let userId\n\n    if (firebase.auth().currentUser === null) {\n      return router.push('/login')\n    } else {\n      userId = firebase.auth().currentUser.uid\n    }\n\n    firebase\n      .database()\n      .ref(`users/${userId}`)\n      .once('value')\n      .then((snapshot) => {\n        console.log(snapshot.val())\n        setUser(snapshot.val())\n        setLoggedIn(true)\n      })\n\n    // getConnection()\n    //   .getRepository(Goal)\n    //   .find()\n    //   .then((goal) => console.log(goal))\n  }, [])\n\n  return (\n    <>\n      {/* {loggedIn ? (\n        <>\n          <h1>Dashboard</h1>\n          <h2>Welcome, {user.displayName}</h2>\n        </>\n      ) : (\n        <>\n          <h2>Please wait...</h2>\n        </>\n      )} */}\n      hello\n    </>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}