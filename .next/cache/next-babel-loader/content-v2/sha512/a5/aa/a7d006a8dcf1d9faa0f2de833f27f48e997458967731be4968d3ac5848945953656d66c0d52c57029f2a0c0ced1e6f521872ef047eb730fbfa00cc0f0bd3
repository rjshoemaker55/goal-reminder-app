{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/register.tsx\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport firebase from '../firebase';\nimport Error from '../components/Error';\nimport { validate, writeUserData } from '../utils/helpers';\n\nconst Register = () => {\n  const router = useRouter();\n  const {\n    0: page,\n    1: setPage\n  } = useState('login');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({\n    name: '',\n    email: '',\n    password: ''\n  }); // Capture form submit\n\n  const submitRegister = async e => {\n    e.preventDefault();\n    let user = {\n      name,\n      email,\n      password\n    }; // Validate user object\n\n    const validationResult = validate(user); // If no errors, add new user to auth database\n\n    if (validationResult.noErrors) {\n      firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then(userCredential => {\n        let newUser = userCredential.user; // Create new user object in realtime database\n\n        writeUserData(newUser.uid, user.name, newUser.email); // Redirect to dashboard\n\n        router.push('/home');\n      }).catch(error => {\n        console.log(error);\n      });\n    } // Set errrors state to match errors returned from validate\n\n\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password: validationResult.password === '' ? '' : validationResult.password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: page === 'register' ? submitRegister : submitLogin,\n    children: [page === 'register' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: page === 'register' ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/register.tsx"],"names":["useState","useRouter","firebase","Error","validate","writeUserData","Register","router","page","setPage","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","preventDefault","user","validationResult","noErrors","auth","createUserWithEmailAndPassword","then","userCredential","newUser","uid","push","catch","error","console","log","submitLogin","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\nimport { User } from '../utils/types'\nimport { validate, writeUserData } from '../utils/helpers'\n\nconst Register = () => {\n  const router = useRouter()\n  const [page, setPage] = useState('login')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n\n  // Capture form submit\n  const submitRegister = async (e: any) => {\n    e.preventDefault()\n\n    let user: User = {\n      name,\n      email,\n      password\n    }\n\n    // Validate user object\n    const validationResult = validate(user)\n\n    // If no errors, add new user to auth database\n    if (validationResult.noErrors) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(user.email, user.password)\n        .then((userCredential) => {\n          let newUser = userCredential.user\n\n          // Create new user object in realtime database\n          writeUserData(newUser.uid, user.name, newUser.email)\n\n          // Redirect to dashboard\n          router.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n\n    // Set errrors state to match errors returned from validate\n    return setErrors({\n      name: validationResult.name === '' ? '' : validationResult.name,\n      email: validationResult.email === '' ? '' : validationResult.email,\n      password:\n        validationResult.password === '' ? '' : validationResult.password\n    })\n  }\n\n  return (\n    <form onSubmit={page === 'register' ? submitRegister : submitLogin}>\n      {page === 'register' && (\n        <>\n          <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n          <Error>{errors.name}</Error>\n        </>\n      )}\n      <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <button type='submit'>\n        {page === 'register' ? 'Register' : 'Login'}\n      </button>\n    </form>\n  )\n}\nexport default Register\n"]},"metadata":{},"sourceType":"module"}