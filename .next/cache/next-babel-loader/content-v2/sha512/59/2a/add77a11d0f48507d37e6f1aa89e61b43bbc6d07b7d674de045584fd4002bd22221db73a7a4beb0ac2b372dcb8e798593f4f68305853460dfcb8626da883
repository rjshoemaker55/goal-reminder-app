{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/home.tsx\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport firebase from '../firebase';\nimport { getOrCreateConnection } from '../utils';\nexport const getServerSideProps = async () => {\n  const conn = await getOrCreateConnection();\n  return {\n    props: {\n      conn\n    }\n  };\n};\n\nconst Home = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    email: '',\n    displayName: ''\n  });\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    let userId;\n\n    if (firebase.auth().currentUser === null) {\n      return router.push('/login');\n    } else {\n      userId = firebase.auth().currentUser.uid;\n    }\n\n    firebase.database().ref(`users/${userId}`).once('value').then(snapshot => {\n      console.log(snapshot.val());\n      setUser(snapshot.val());\n      setLoggedIn(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/home.tsx"],"names":["useEffect","useState","useRouter","firebase","getOrCreateConnection","getServerSideProps","conn","props","Home","user","setUser","email","displayName","loggedIn","setLoggedIn","router","userId","auth","currentUser","push","uid","database","ref","once","then","snapshot","console","log","val"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAIA,SAASC,qBAAT,QAAsC,UAAtC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,IAAI,GAAG,MAAMF,qBAAqB,EAAxC;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AAAT,GAAP;AACD,CAHM;;AAKP,MAAME,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE;AAA1B,GAAD,CAAhC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMc,MAAM,GAAGb,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAW;AACnB,QAAIgB,MAAJ;;AAEA,QAAIb,QAAQ,CAACc,IAAT,GAAgBC,WAAhB,KAAgC,IAApC,EAA0C;AACxC,aAAOH,MAAM,CAACI,IAAP,CAAY,QAAZ,CAAP;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,GAAGb,QAAQ,CAACc,IAAT,GAAgBC,WAAhB,CAA4BE,GAArC;AACD;;AAEDjB,IAAAA,QAAQ,CACLkB,QADH,GAEGC,GAFH,CAEQ,SAAQN,MAAO,EAFvB,EAGGO,IAHH,CAGQ,OAHR,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,EAAZ;AACAlB,MAAAA,OAAO,CAACe,QAAQ,CAACG,GAAT,EAAD,CAAP;AACAd,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KARH;AASD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,cACGD,QAAQ,gBACP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAcJ,IAAI,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADO,gBAMP;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAPJ,mBADF;AAcD,CAvCD;;AAyCA,eAAeJ,IAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport firebase from '../firebase'\nimport { getConnection } from 'typeorm'\nimport { Goal } from '../database/src/entity/Goal.entity'\nimport { create } from 'domain'\nimport { getOrCreateConnection } from '../utils'\n\nexport const getServerSideProps = async () => {\n  const conn = await getOrCreateConnection()\n  return { props: { conn } }\n}\n\nconst Home = () => {\n  const [user, setUser] = useState({ email: '', displayName: '' })\n  const [loggedIn, setLoggedIn] = useState(false)\n  const router = useRouter()\n\n  useEffect((): any => {\n    let userId\n\n    if (firebase.auth().currentUser === null) {\n      return router.push('/login')\n    } else {\n      userId = firebase.auth().currentUser.uid\n    }\n\n    firebase\n      .database()\n      .ref(`users/${userId}`)\n      .once('value')\n      .then((snapshot) => {\n        console.log(snapshot.val())\n        setUser(snapshot.val())\n        setLoggedIn(true)\n      })\n  }, [])\n\n  return (\n    <>\n      {loggedIn ? (\n        <>\n          <h1>Dashboard</h1>\n          <h2>Welcome, {user.displayName}</h2>\n        </>\n      ) : (\n        <>\n          <h2>Please wait...</h2>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}