{"ast":null,"code":"import 'reflect-metadata';\nimport { createConnection } from 'typeorm';\nimport nextConnect from 'next-connect';\nimport { Goal } from '../../src/entity/Goal';\nconst handler = nextConnect();\ncreateConnection().then(async connection => {\n  let goalRepo = connection.getRepository(Goal);\n  handler.get(async (req, res) => {\n    let goals = await goalRepo.find();\n    res.statusCode = 200;\n    res.json({\n      status: 'success',\n      data: goals\n    });\n  });\n}).catch(err => console.log(err));\nexport default handler;","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/api/getGoals.ts"],"names":["createConnection","nextConnect","Goal","handler","then","connection","goalRepo","getRepository","get","req","res","goals","find","statusCode","json","status","data","catch","err","console","log"],"mappings":"AAAA,OAAO,kBAAP;AACA,SAAwBA,gBAAxB,QAAgD,SAAhD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,IAAT,QAAqB,uBAArB;AAEA,MAAMC,OAAO,GAAGF,WAAW,EAA3B;AAEAD,gBAAgB,GACbI,IADH,CACQ,MAAOC,UAAP,IAAsB;AAC1B,MAAIC,QAAQ,GAAGD,UAAU,CAACE,aAAX,CAAyBL,IAAzB,CAAf;AAEAC,EAAAA,OAAO,CAACK,GAAR,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC9B,QAAIC,KAAK,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAlB;AAEAF,IAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAAS;AACPC,MAAAA,MAAM,EAAE,SADD;AAEPC,MAAAA,IAAI,EAAEL;AAFC,KAAT;AAID,GARD;AASD,CAbH,EAcGM,KAdH,CAcUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdlB;AAgBA,eAAef,OAAf","sourcesContent":["import 'reflect-metadata'\nimport { getConnection, createConnection } from 'typeorm'\nimport nextConnect from 'next-connect'\nimport { NextApiRequest, NextApiResponse } from 'next'\nimport { Goal } from '../../src/entity/Goal'\n\nconst handler = nextConnect<NextApiRequest, NextApiResponse>()\n\ncreateConnection()\n  .then(async (connection) => {\n    let goalRepo = connection.getRepository(Goal)\n\n    handler.get(async (req, res) => {\n      let goals = await goalRepo.find()\n\n      res.statusCode = 200\n      res.json({\n        status: 'success',\n        data: goals\n      })\n    })\n  })\n  .catch((err) => console.log(err))\n\nexport default handler\n"]},"metadata":{},"sourceType":"module"}