{"ast":null,"code":"import { createConnection } from 'typeorm';\nimport { Goal } from '../../src/entity/Goal';\nexport default (async (req, res) => {\n  createConnection().then(async connection => {\n    let goalRepo = connection.getRepository(Goal);\n    goalRepo.find().then(goals => res.json(goals));\n  }); // createConnection().then(async (connection) => {\n  //   return new Promise(async (resolve, reject) => {\n  //     let goalRepo = connection.getRepository(Goal)\n  //     goalRepo\n  //       .find()\n  //       .then((goals) => {\n  //         res.json(JSON.stringify)\n  //         resolve()\n  //       })\n  //       .catch((err) => {\n  //         res.json(err)\n  //         res.status(405).end()\n  //         return reject()\n  //       })\n  //   })\n  // })\n});","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/api/getGoals.ts"],"names":["createConnection","Goal","req","res","then","connection","goalRepo","getRepository","find","goals","json"],"mappings":"AAAA,SAAwBA,gBAAxB,QAAgD,SAAhD;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjCH,EAAAA,gBAAgB,GAAGI,IAAnB,CAAwB,MAAOC,UAAP,IAAsB;AAC5C,QAAIC,QAAQ,GAAGD,UAAU,CAACE,aAAX,CAAyBN,IAAzB,CAAf;AAEAK,IAAAA,QAAQ,CAACE,IAAT,GAAgBJ,IAAhB,CAAsBK,KAAD,IAAWN,GAAG,CAACO,IAAJ,CAASD,KAAT,CAAhC;AACD,GAJD,EADiC,CAOjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAxBD","sourcesContent":["import { getConnection, createConnection } from 'typeorm'\nimport { Goal } from '../../src/entity/Goal'\n\nexport default async (req, res) => {\n  createConnection().then(async (connection) => {\n    let goalRepo = connection.getRepository(Goal)\n\n    goalRepo.find().then((goals) => res.json(goals))\n  })\n\n  // createConnection().then(async (connection) => {\n  //   return new Promise(async (resolve, reject) => {\n  //     let goalRepo = connection.getRepository(Goal)\n\n  //     goalRepo\n  //       .find()\n  //       .then((goals) => {\n  //         res.json(JSON.stringify)\n  //         resolve()\n  //       })\n  //       .catch((err) => {\n  //         res.json(err)\n  //         res.status(405).end()\n  //         return reject()\n  //       })\n  //   })\n  // })\n}\n"]},"metadata":{},"sourceType":"module"}