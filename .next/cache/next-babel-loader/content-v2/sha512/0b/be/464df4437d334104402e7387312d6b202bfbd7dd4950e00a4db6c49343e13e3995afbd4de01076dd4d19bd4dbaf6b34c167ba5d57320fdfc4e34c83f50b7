{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport firebase from '../firebase';\nimport Error from '../components/Error';\n\nvar Register = function Register() {\n  _s();\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  // Capture form submit, validate and submit new user\n  var submitRegister = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var usersRef, user, validationResult, validate;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              validate = function _validate(user) {\n                var tempErrors = {\n                  name: '',\n                  email: '',\n                  password: '',\n                  noErrors: true\n                };\n                if (user.name === '') tempErrors.name = 'You must enter your name.';\n                var emailPattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/);\n                if (!emailPattern.test(user.email)) tempErrors.email = 'You must enter a valid email.';\n                var passwordPattern = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})');\n                if (!passwordPattern.test(user.password)) tempErrors.password = 'Your password must contain at least 6 characters, one numeric digit, one uppercase and one lowercase letter.';\n                tempErrors.noErrors = tempErrors.name === '' && tempErrors.email === '' && tempErrors.password === '';\n                return tempErrors;\n              };\n\n              e.preventDefault();\n              usersRef = firebase.database().ref('users');\n              user = {\n                name: name,\n                email: email,\n                password: password\n              }; // Check if each field was filled and set errors state accordingly\n\n              validationResult = validate(user);\n              console.log(validationResult);\n\n              if (validationResult.noErrors) {\n                console.log('register user');\n                console.log(\"No errors from validationResult - \".concat(errors));\n              } else {\n                setErrors({\n                  name: validationResult.name,\n                  email: validationResult.email,\n                  password: validationResult.password\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitRegister(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      onChange: function onChange(e) {\n        return setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Error, {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"It7IWVc4i6Q7U7jKdF9tJeVB4/Q=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/pages/Register.tsx"],"names":["useState","firebase","Error","Register","name","setName","email","setEmail","password","setPassword","errors","setErrors","submitRegister","e","validate","user","tempErrors","noErrors","emailPattern","RegExp","test","passwordPattern","preventDefault","usersRef","database","ref","validationResult","console","log","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport firebase from '../firebase'\nimport Error from '../components/Error'\n\nconst Register = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({ name: '', email: '', password: '' })\n\n  interface User {\n    name: string\n    email: string\n    password: string\n  }\n\n  interface UserErrors {\n    name: string\n    email: string\n    password: string\n    noErrors: boolean\n  }\n\n  // Capture form submit, validate and submit new user\n  const submitRegister = async (e: any) => {\n    e.preventDefault()\n    const usersRef = firebase.database().ref('users')\n    let user: User = {\n      name,\n      email,\n      password\n    }\n\n    // Check if each field was filled and set errors state accordingly\n    const validationResult = validate(user)\n    console.log(validationResult)\n\n    if (validationResult.noErrors) {\n      console.log('register user')\n      console.log(`No errors from validationResult - ${errors}`)\n    } else {\n      setErrors({\n        name: validationResult.name,\n        email: validationResult.email,\n        password: validationResult.password\n      })\n    }\n    function validate(user: User): UserErrors {\n      let tempErrors: UserErrors = {\n        name: '',\n        email: '',\n        password: '',\n        noErrors: true\n      }\n\n      if (user.name === '') tempErrors.name = 'You must enter your name.'\n\n      let emailPattern = new RegExp(\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/\n      )\n      if (!emailPattern.test(user.email))\n        tempErrors.email = 'You must enter a valid email.'\n\n      let passwordPattern = new RegExp(\n        '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})'\n      )\n      if (!passwordPattern.test(user.password))\n        tempErrors.password =\n          'Your password must contain at least 6 characters, one numeric digit, one uppercase and one lowercase letter.'\n\n      tempErrors.noErrors =\n        tempErrors.name === '' &&\n        tempErrors.email === '' &&\n        tempErrors.password === ''\n\n      return tempErrors\n    }\n  }\n  return (\n    <form onSubmit={submitRegister}>\n      <input placeholder='Name' onChange={(e) => setName(e.target.value)} />\n      <Error>{errors.name}</Error>\n      <input placeholder='Email' onChange={(e) => setEmail(e.target.value)} />\n      <Error>{errors.email}</Error>\n      <input\n        placeholder='Password'\n        type='password'\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Error>{errors.password}</Error>\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\nexport default Register\n"]},"metadata":{},"sourceType":"module"}