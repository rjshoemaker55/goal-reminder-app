{"ast":null,"code":"import firebase from '../firebase';\nexport function validate(user) {\n  var tempErrors = {\n    name: '',\n    email: '',\n    password: '',\n    noErrors: true\n  };\n  if (user.name === '') tempErrors.name = 'You must enter your name.';\n  var emailPattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/);\n  if (!emailPattern.test(user.email)) tempErrors.email = 'You must enter a valid email.';\n  var passwordPattern = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})');\n  if (!passwordPattern.test(user.password)) tempErrors.password = 'Your password must contain at least 6 characters, one uppercase and one lowercase letter, a number, and a special character.';\n  tempErrors.noErrors = tempErrors.name === '' && tempErrors.email === '' && tempErrors.password === '';\n  return tempErrors;\n}\nexport function writeUserData(userId, name, email) {\n  firebase.database().ref('users/' + userId).set({\n    username: name,\n    email: email //some more user data\n\n  });\n}","map":{"version":3,"sources":["/Users/rjshoemaker/Documents/code/projects/goal-reminder-app/utils/helpers.ts"],"names":["firebase","validate","user","tempErrors","name","email","password","noErrors","emailPattern","RegExp","test","passwordPattern","writeUserData","userId","database","ref","set","username"],"mappings":"AACA,OAAOA,QAAP,MAAqB,aAArB;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAA0C;AAC/C,MAAIC,UAAsB,GAAG;AAC3BC,IAAAA,IAAI,EAAE,EADqB;AAE3BC,IAAAA,KAAK,EAAE,EAFoB;AAG3BC,IAAAA,QAAQ,EAAE,EAHiB;AAI3BC,IAAAA,QAAQ,EAAE;AAJiB,GAA7B;AAOA,MAAIL,IAAI,CAACE,IAAL,KAAc,EAAlB,EAAsBD,UAAU,CAACC,IAAX,GAAkB,2BAAlB;AAEtB,MAAII,YAAY,GAAG,IAAIC,MAAJ,CACjB,gSADiB,CAAnB;AAGA,MAAI,CAACD,YAAY,CAACE,IAAb,CAAkBR,IAAI,CAACG,KAAvB,CAAL,EACEF,UAAU,CAACE,KAAX,GAAmB,+BAAnB;AAEF,MAAIM,eAAe,GAAG,IAAIF,MAAJ,CACpB,6DADoB,CAAtB;AAGA,MAAI,CAACE,eAAe,CAACD,IAAhB,CAAqBR,IAAI,CAACI,QAA1B,CAAL,EACEH,UAAU,CAACG,QAAX,GACE,8HADF;AAGFH,EAAAA,UAAU,CAACI,QAAX,GACEJ,UAAU,CAACC,IAAX,KAAoB,EAApB,IACAD,UAAU,CAACE,KAAX,KAAqB,EADrB,IAEAF,UAAU,CAACG,QAAX,KAAwB,EAH1B;AAKA,SAAOH,UAAP;AACD;AAED,OAAO,SAASS,aAAT,CAAuBC,MAAvB,EAA+BT,IAA/B,EAAqCC,KAArC,EAA4C;AACjDL,EAAAA,QAAQ,CACLc,QADH,GAEGC,GAFH,CAEO,WAAWF,MAFlB,EAGGG,GAHH,CAGO;AACHC,IAAAA,QAAQ,EAAEb,IADP;AAEHC,IAAAA,KAAK,EAAEA,KAFJ,CAGH;;AAHG,GAHP;AAQD","sourcesContent":["import { User, UserErrors } from './types'\nimport firebase from '../firebase'\n\nexport function validate(user: User): UserErrors {\n  let tempErrors: UserErrors = {\n    name: '',\n    email: '',\n    password: '',\n    noErrors: true\n  }\n\n  if (user.name === '') tempErrors.name = 'You must enter your name.'\n\n  let emailPattern = new RegExp(\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/\n  )\n  if (!emailPattern.test(user.email))\n    tempErrors.email = 'You must enter a valid email.'\n\n  let passwordPattern = new RegExp(\n    '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})'\n  )\n  if (!passwordPattern.test(user.password))\n    tempErrors.password =\n      'Your password must contain at least 6 characters, one uppercase and one lowercase letter, a number, and a special character.'\n\n  tempErrors.noErrors =\n    tempErrors.name === '' &&\n    tempErrors.email === '' &&\n    tempErrors.password === ''\n\n  return tempErrors\n}\n\nexport function writeUserData(userId, name, email) {\n  firebase\n    .database()\n    .ref('users/' + userId)\n    .set({\n      username: name,\n      email: email\n      //some more user data\n    })\n}\n"]},"metadata":{},"sourceType":"module"}